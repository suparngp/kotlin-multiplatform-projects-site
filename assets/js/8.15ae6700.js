(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{214:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"suparnatural-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#suparnatural-cache"}},[t._v("#")]),t._v(" suparnatural-cache")]),t._v(" "),e("h2",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[t._v("A super fast, persistable, thread safe in-memory cache for iOS and Android.")]),t._v(" "),e("p",[t._v("Check the API documentation for details.")]),t._v(" "),e("h2",{attrs:{id:"setup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[t._v("#")]),t._v(" Setup")]),t._v(" "),e("ol",[e("li",[t._v("Add the repository to your project."),e("div",{staticClass:"language-groovy line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-groovy"}},[e("code",[t._v("repositories "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mavenCentral")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])])]),t._v(" "),e("li",[t._v("Add "),e("code",[t._v("implementation 'com.suparnatural.kotlin:cache:version'")]),t._v(" to "),e("code",[t._v("commonMain")]),t._v(".")])]),t._v(" "),e("blockquote",[e("p",[t._v("With the hierarchical project structure, you generally need to add the dependency to "),e("code",[t._v("commonMain")]),t._v(" only. Other targets are also available in case you need to override this behavior.")])]),t._v(" "),e("h2",{attrs:{id:"concepts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#concepts"}},[t._v("#")]),t._v(" Concepts")]),t._v(" "),e("h3",{attrs:{id:"models"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#models"}},[t._v("#")]),t._v(" Models")]),t._v(" "),e("p",[t._v("Every object which you want to cache must implement "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-cacheable/index.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("Cacheable")]),e("OutboundLink")],1),t._v(" interface. The only requirement is to implement "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-cacheable/cache-key.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("cacheKey()")]),e("OutboundLink")],1),t._v(" to return a unique identifier using which the object will be identified.")]),t._v(" "),e("div",{staticClass:"language-kotlin line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-kotlin"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Cacheable "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cacheKey")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this method is only required if you want your objects to be serializable.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("serializeForPersistence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h3",{attrs:{id:"cachemanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cachemanager"}},[t._v("#")]),t._v(" CacheManager")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-cache-manager/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CacheManager"),e("OutboundLink")],1),t._v(" is a thread safe singleton which you will interact with. It needs to be initialized by calling "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-cache-manager/initialize.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("initialize"),e("OutboundLink")],1),t._v(" which accepts an instance of "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-cache/index.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("Cache")]),e("OutboundLink")],1),t._v(". The library provides a default implementation with an "),e("code",[t._v("abstract class")]),t._v(" "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-in-memory-cache/index.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("InMemoryCache")]),e("OutboundLink")],1),t._v(" with a "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-fifo-cache-replacement-policy/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("FIFO cache replacement policy"),e("OutboundLink")],1),t._v(". On top of that, you can choose a hashing algorithm as well. Two such algorithms are provided "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-linear-probing-cache/index.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("Linear Probing")]),e("OutboundLink")],1),t._v(" and "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-robin-hood-probing-cache/index.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("Robinhood Hashing")]),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),e("h3",{attrs:{id:"initialize-without-persistent-storage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initialize-without-persistent-storage"}},[t._v("#")]),t._v(" Initialize Without persistent storage.")]),t._v(" "),e("div",{staticClass:"language-kotlin line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-kotlin"}},[e("code",[t._v("CacheManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("initialize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("LinearProbingCache")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cacheSize"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" persistentStores "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emptyList")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCacheManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cache"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addObject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BOB"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h3",{attrs:{id:"initialize-with-persistent-storage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initialize-with-persistent-storage"}},[t._v("#")]),t._v(" Initialize With persistent storage")]),t._v(" "),e("div",{staticClass:"language-kotlin line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-kotlin"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Person "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("serializeForPersistence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$name")]),t._v('"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" diskStorage "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DiskStore")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blocking "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this can be non blocking too. Check the API docs")]),t._v("\nCacheManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("initialize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("LinearProbingCache")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cacheSize"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" persistentStores "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("listOf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("diskStorage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCacheManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cache"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addObject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BOB"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Person(\'BOB\') will be be persisted to a file called "BOB" with contents = "BOB"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("h3",{attrs:{id:"custom-store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-store"}},[t._v("#")]),t._v(" Custom Store")]),t._v(" "),e("p",[t._v("A custom store can also be used to back the in memory cache.")]),t._v(" "),e("p",[t._v("Implement the "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-cache-store/index.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("CacheStore")]),e("OutboundLink")],1),t._v(" interface and pass it in "),e("code",[t._v("persistentStores")]),t._v(" argument.")]),t._v(" "),e("h3",{attrs:{id:"rehydration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rehydration"}},[t._v("#")]),t._v(" Rehydration")]),t._v(" "),e("p",[t._v("If you are using a persistent store, chances are that you want your cache to be reloaded after your app's cold start. If that is the case, then you must provide a list of preprocessors to the storage object where each item in the list is a "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-cache-store-preprocessor/index.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("CacheStorePreprocessor")]),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"custom-cache-replacement-policy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-cache-replacement-policy"}},[t._v("#")]),t._v(" Custom Cache Replacement Policy")]),t._v(" "),e("p",[t._v("By default, the inmemory cache uses a FIFO replacement policy where the old object in the cache is evicted first when cache is full. You can also create your own replacement policy like "),e("code",[t._v("LRU")]),t._v(" by implementing "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-cache-replacement-policy/index.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("CacheReplacementPolicy")]),e("OutboundLink")],1),t._v(" and then passing it in the "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-linear-probing-cache/index.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("Linear Probing")]),e("OutboundLink")],1),t._v(" or "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/com.suparnatural.core.cache/-robin-hood-probing-cache/index.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("Robinhood Hashing")]),e("OutboundLink")],1),t._v(" constructors.")]),t._v(" "),e("h2",{attrs:{id:"api-docs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api-docs"}},[t._v("#")]),t._v(" API Docs")]),t._v(" "),e("p",[t._v("Check out the "),e("a",{attrs:{href:"https://suparngp.github.io/kotlin-multiplatform-projects/cache/docs/suparnatural-cache/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("API Docs"),e("OutboundLink")],1),t._v(".\nThey are always up to date with code examples.")])])}),[],!1,null,null,null);a.default=n.exports}}]);